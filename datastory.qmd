---
title: "Data Story"
---

## Placeholder shiny app - to be customised

```{=html}
<iframe height="400" width="100%" frameborder="no" src="https://edwxgo-yin0shuen-chin.shinyapps.io/Shiny_visualisation_NM2207/"> </iframe>
```
# Data Visualisation

Below, I will be analysing various song properties and their relationships with song popularity.

The main question I wish to answer is "What determines the extent of popularity of songs in Spotify?"

## 1. Total number of songs per genre

This column chart below allows us to analyse the total number of songs for the top 30 genre types.

```{r, eval=TRUE, echo=FALSE, message = FALSE}

library(tidyverse)
df <- read_csv("df.csv")
df_grouped <- group_by(df, genre)

df_summarised <- summarise(df_grouped, song = n())

df_arranged <- arrange(df_summarised, desc(song))
df_head <- head(df_arranged, 30)

ggplot(df_head, aes(x = reorder(genre, song), y = song)) +
  geom_col(fill = "steelblue", width = 0.7) +
  coord_flip() +
  labs(x = "Genre", y = "Number of songs", title = "Top 30 genres by number of songs") +
  theme_minimal()

```

## 3. Songs Per Year

The area plot below consolidates the number of songs per year between 1998 and 2020.

```{r, echo=FALSE}

# Group by 'year' and count the number of songs, then sort by 'song' count in descending order and then by 'year'
df_grouped <- df %>%
  group_by(year) %>%
  summarise(song = n()) %>%
  arrange(desc(song), year)



# Create area plot
area_plot <- ggplot(df_grouped, aes(x = year, y = song, group = 1)) +
  geom_area(fill = "green", color = "green", alpha = 0.5) +
  geom_point(color = "green", size = 2) +
  labs(title = "Year by Year Songs collection", x = "Year", y = "Total songs") +
  theme_minimal() 

area_plot

```

## 4. Songs Per Artist - Top 50 Artists

The bar chart below consolidates data on the number of songs released by the top 50 artists featured in the dataset of top Spotify tracks, arranged from highest number of songs to lowest.

*The artist with the most number of featured songs is Rihanna, with 25 songs.*

```{r, echo=FALSE, message = FALSE, error = FALSE, warning = FALSE}

# Group by 'artist' and count the number of songs, then sort by 'song' count in descending order and select top 50
df_grouped <- df %>%
  group_by(artist) %>%
  summarise(song = n()) %>%
  arrange(desc(song)) %>%
  head(50)

df_grouped$artist <- as.character(df_grouped$artist)

# Create bar plot
ggplot(df_grouped, aes(x = reorder(artist, -song), y = song, fill = artist)) +
  geom_bar(stat = "identity", width = 0.8, color = "black") +
  labs(title = "List of Songs Recorded by Each Artist", x = "Artist", y = "Total Songs") +
  geom_text(aes(label = song), vjust = -0.5, size = 3) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  guides(fill = FALSE)

```

## 5. Top 25 Songs Based On Popularity

Line graph features the top 25 songs from the dataset, arranged in descending order based on popularity level.

*The most popular song is Sweater Weather, with a popularity rating of 89 out of 100.*

```{r, echo=FALSE}
library(ggplot2)
library(dplyr)


# Arrange dataframe by 'popularity' in descending order and select top 25 rows
df_top <- df %>%
  arrange(desc(popularity)) %>%
  select(popularity, song) %>%
   head(25) 




# Create line plot
ggplot(df_top, aes(x = reorder(song, -popularity), y = popularity, group = 1)) +
  geom_line() +
  geom_point() +
  labs(title = "Top 25 songs", x = "Song", y = "Popularity") +
  scale_color_manual(values = "green") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  guides(fill = FALSE)

```

## 6. Songs Containing Explicit Content

This simple pie chart below clearly illustrates the percentage of songs which contain explicit content.

*72.4% , or the majority of the songs in this dataset, are explicit.*

```{r, echo=FALSE}

# Group the data by 'explicit'
df_grouped <- df %>%
  group_by(explicit) %>%
  summarise(total_songs =n())



# Calculate the percentage of each variable
df_grouped <- df_grouped %>%
  mutate(percent = total_songs/sum(total_songs)*100)

# Sort the data by 'total_songs'
df_sorted <- df_grouped %>%
  arrange(desc(total_songs))



# Create a pie chart
pie_chart <- ggplot(df_sorted, aes(x = "", y = total_songs, fill = explicit)) +
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start = 0) +
  scale_fill_manual(values = c("blue", "red")) +
  geom_text(aes(label = paste0(round(percent, 1), "%")),
            position = position_stack(vjust = 0.5)) +
  labs(title = "Songs containing explicit content",
       x = NULL,
       y = NULL,
       fill = NULL,
       color = NULL) +
  theme_minimal() +
  theme(axis.text.x = element_blank(),
        axis.ticks = element_blank(),
        plot.title = element_text(hjust = 0.5))

# Display the plot
print(pie_chart)
```

## 7. Year vs Explicit Content

The area plot below illustrates the relationship between the year of song published and explicit songs.

```{r, echo = FALSE, message = FALSE}
library(ggplot2)

df_explicit <- df %>%
  filter(explicit = TRUE) %>%
  count(year, sort = TRUE) %>%
  arrange (year)

plot <- ggplot(df_explicit, aes(x = year, y = n)) +
  geom_area(fill = "red", alpha = 0.5) +
  geom_point(colour = "red", size = 1) +
  labs(title = "Number of explicit songs by year",
       x = "Year",
       y = "Total songs") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

print(plot)

```

## 8. Popularity versus Explicit Songs

The bar plot below visualises the popularity of songs based on whether they are explicit or not.

*To put in analysis*

```{r, echo=FALSE}
ggplot(df, aes(x = explicit, y = popularity, fill = explicit)) +
  geom_boxplot() +
  labs(title = "Popularity versus explicit songs",
       x = "Explicit Songs",
       y = "Popularity") +
  scale_fill_manual(values = c("steelblue", "darkred")) +
  theme_minimal() +
  theme(legend.position = "none")

```
