---
title: "Data Story"
---

# Data Cleaning

I have cleaned the dataset by removing duplicate and NA values, as well as selecting only the relevant columns required for my data analysis.

The original dataset had songs spanning from year 1998 to year 2020, but was not representative of the top songs from the entire year of 1998 as well as year 2020. This is because the data only considered songs from the end of 1998 and the start of 2020, instead of the whole year. To ensure that there are no sudden abnormalities in data trends, I have narrowed the data to cover only songs between years 1999 to 2019.

You can view both original and cleaned datasets here:

```{=html}

<iframe height="400" width="100%" frameborder="no" src="https://edwxgo-yin0shuen-chin.shinyapps.io/App1/"> </iframe>
```
## Names and Meanings of Variables in Cleaned Dataset

"artist" refers to the name of the Artist.

"song" refers to the name of the song track.

"explicit" refers to whether the lyrics or content of a song or a music video contain one or more of the criteria which could be considered offensive or unsuitable for children.

"year" refers to the release year of the track.

"popularity" refers to the popularity level of the track. The higher the value the more popular the song is.

"speechiness" refers to the presence of spoken words in a sound track. The greater the presence of speech-like qualities, the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are likely made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 0.33 most likely represent music and other non-speech-like tracks.

"tempo" refers to the overall estimated tempo of a track in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration.

"loudness" refers to the overall loudness of a track in decibels (dB). Loudness values are averaged across the entire track and are useful for comparing relative loudness of tracks. Loudness is the quality of a sound that is the primary psychological correlate of physical strength (amplitude). Values typically range between -60 and 0 db.

"acousticness" refers to the confidence measure from 0.0 to 1.0 of whether the track is acoustic. 1.0 represents high confidence the track is acoustic.

"valence" refers to the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry). It measures from 0.0 to 1.0.

# Data Visualisation

Below, I will be analysing various song properties and their relationships with song popularity.

The main question I wish to answer is **"What determines the extent of popularity of songs in Spotify?"**

------------------------------------------------------------------------

## [1.0 Overview Statistics]{.underline}

Here is a breakdown of the general statistics for the cleaned dataset.

## 1.1 Number of songs and artists

Number of artists:

```{r, message = FALSE}
library(tidyverse)
df <- read_csv("df.csv")
artists <- df$artist %>%
  unique() %>%
  length() 
artists


```

Number of songs:

```{r}
nrow(df)

```

## 1.2 Songs Per Year

The bar plot below consolidates the number of songs released for each year, between 1999 and 2019. Hover over each respective bar to see the individual values.

```{r, echo=FALSE, message = FALSE}
library(dplyr)
library(ggplot2)
library(gganimate)
library(plotly)
library(tidyverse)


df <- read_csv("df.csv")
songs_per_year <- df %>% count(year) %>% arrange(year)



hover_text <- data.frame(year = songs_per_year$year, n = songs_per_year$n)

p <- ggplotly(ggplot(songs_per_year, aes(x = year, y = n)) +
  geom_col(fill = 'mediumpurple') +
  labs(title = 'Number of songs per year',
       x = 'Year',
       y = 'Number of songs') +
  scale_x_continuous(breaks = songs_per_year$year) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)))

hover_text <- data.frame(year = songs_per_year$year,
                         n = songs_per_year$n,
                         label = paste(songs_per_year$year, ":", songs_per_year$n, sep = " "))


p
```

<p style="color:#6200EA;">Findings:</p>

<p style="color:#6200EA;">2012 has the highest number of songs, at 113 songs.</p>

## 1.3 Songs Per Artist - Top 100 Artists

The interactive bar chart below consolidates data on the number of songs released by artists featured in the dataset of top Spotify tracks, arranged from artists with the highest number of songs featured to lowest.

Adjust the slider to select your preferred number of artists to show in the chart.

```{=html}

<iframe height="400" width="100%" frameborder="no" src="https://edwxgo-yin0shuen-chin.shinyapps.io/App2/"> </iframe>
```
<p style="color:#6200EA;">Findings:</p>

<p style="color:#6200EA;">The artist with the most number of featured songs is Rihanna, with 25 songs.</p>

## 1.4 Top 25 Songs Based On Popularity

Line graph features the top 25 songs from the dataset, arranged in descending order based on popularity level.

Hover over each point to its individual popularity level out of 100.

```{r, echo=FALSE, warning = FALSE}
library(ggplot2)
library(dplyr)
library(gganimate)
library(plotly)

# Arrange dataframe by 'popularity' in descending order and select top 25 rows
df_top <- df %>%
  arrange(desc(popularity)) %>%
  select(popularity, song) %>%
  head(25)

# Create line plot
p <- ggplot(df_top, aes(x = reorder(song, -popularity), y = popularity, group = 1)) +
  geom_line(colour = "blue") +
  geom_point(colour = "blue") +
  labs(title = "Top 25 Songs Based on Popularity", x = "Song", y = "Popularity") +
  scale_color_manual(values = "blue") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  guides(fill = FALSE) +
  scale_y_continuous(limits = c(82, 90))

p <- p + transition_states(states = song, transition_length = 2)

ggplotly(p, tooltip = c("song", "popularity")) %>%
  style(xaxis = list(title = "Song"),
        yaxis = list(title = "Popularity"),
        title = "Top 25 Songs")
```

<p style="color:#6200EA;">Findings:</p>

<p style="color:#6200EA;">The most popular song is Sweater Weather, with a popularity rating of 89 out of 100.</p>

## [2.0 How does the explicit value of a song affect its popularity?]{.underline}

## 2.1 Songs Containing Explicit Content

This simple pie chart below clearly illustrates the percentage of songs which contain explicit content.

```{r, message = FALSE, echo = FALSE}
library(tidyverse)
df<- read_csv("df.csv")

# Group the data by 'explicit'
df_grouped <- df %>%
  group_by(explicit) %>%
  summarise(total_songs =n())

# Calculate the percentage of each variable
df_grouped <- df_grouped %>%
  mutate(percent = total_songs/sum(total_songs)*100)

# Sort the data by 'total_songs'
df_sorted <- df_grouped %>%
  arrange(desc(total_songs))

# Create a pie chart
pie_chart <- ggplot(df_sorted, aes(x = "", y = total_songs, fill = explicit)) +
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start = 0) +
  scale_fill_manual(values = c("blue", "red"),
                    labels = c("Explicit", "Non-explicit")) +
  geom_text(aes(label = paste0(round(percent, 1), "%")),
            position = position_stack(vjust = 0.5), color ="white") +
  labs(title = "Songs Containing Explicit Content",
       x = NULL,
       y = NULL,
       fill = NULL,
       color = NULL) +
  theme_minimal() +
  theme(axis.text.x = element_blank(),
        axis.ticks = element_blank(),
        plot.title = element_text(hjust = 0.5))

# Display the plot
print(pie_chart)
```

<p style="color:#6200EA;">Findings:</p>

<p style="color:#6200EA;">27.6%, or the minority of the songs in this dataset, are explicit.</p>

## 2.2 Songs Containing Explicit Content By Year

The area plot below illustrates the relationship between the year of song published and explicit songs.

Hover over each point to see its individual values.

```{r, echo = FALSE, message = FALSE}
library(ggplot2)
library(plotly)
library(gganimate)

df_explicit <- df %>%
  filter(explicit == TRUE) %>%
  count(year, sort = TRUE) %>%
  arrange (year)

plot <- ggplot(df_explicit, aes(x = year, y = n)) +
  geom_area(fill = "pink", alpha = 0.5) +
  geom_point(colour = "red", size = 1) +
  labs(title = "Number of explicit songs by year",
       x = "Year",
       y = "Total songs") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 0, hjust = 1))

plot <- ggplotly(plot, tooltip = c("year", "n"))
plot$data[[1]]$text <- paste("Year:", df_explicit$year, "<br>", "Total songs:", df_explicit$n)

plot <- plotly_build(plot)

plot
```

<p style="color:#6200EA;">Findings:</p>

<p style="color:#6200EA;">2018 contained the most number of explicit songs, at 49 songs, while 1999 contained the least, at 8 songs.</p>

## 2.3 How Does Explicit Level of Song Impact Song Popularity? (Categorical Variable)

The box plots below visualises the popularity of songs based on whether they are explicit or not.

Hover over each plot to see its individual values.

```{r, echo = FALSE, message = FALSE}
# Load the necessary libraries
library(ggplot2)
library(plotly)
library(tidyverse)
df<- read_csv("df.csv")

# Convert the boolean values to "explicit" and "non-explicit"
df$explicit <- ifelse(df$explicit == TRUE, "Explicit", "Non-explicit")

# Create the box plot using ggplot
plot <- ggplot(df, aes(x = explicit, y = popularity, fill = explicit)) +
  geom_boxplot() +
  labs(title = "How Does Explicit Level of Song Impact Song Popularity?",
       x = "Explicit Songs",
       y = "Popularity") +
  scale_fill_manual(values = c("steelblue", "darkred")) +
  theme_minimal() +
  theme(legend.position = "none")

# Convert the ggplot object to a plotly object
plot <- ggplotly(plot, tooltip = c("text"))

# Customize the tooltip text
plot$data[[1]]$text <- paste(
  "<b>Explicit:</b> ", df$explicit,
  "<br><b>Popularity:</b> ", df$popularity
)

# Animate the plot using gganimate (optional)
plot <- plotly_build(plot)

# Print the animation
plot
```

<p style="color:#6200EA;">Findings:</p>

<p style="color:#6200EA;">The median popularity of explicit songs is 67 while that of non-explicit songs is 65. This shows that the explicit value of songs does contribute to its popularity slightly, as seen from the overall higher values found in explicit songs compared to non-explicit songs.</p>

<p style="color:#6200EA;">The difference in minimum values between the two plots is 7, but the differences in the maximum values is 1. Notably, the dispersion or inter-quartile range for values for explicit versus non-explicit songs are the same, at 17. This suggests that despite the significant difference in minimum values, it is likely that the non-explicit songs contain songs with low popularity levels that were not present in explicit songs.</p>

<p style="color:#6200EA;">Overall, I can conclude that popularity is not significantly affected by whether songs are explicit or not.</p>

## [3.0 How Does Different Song Attributes Affect Song Popularity? (Numeric variables)]{.underline}

Firstly, let's take a look at the distribution of different numeric song attributes using histograms. The attributes that I will be focusing on are Speechiness, Tempo, Loudness, Acousticness and Valence.

## 3.1 Distribution of Different Song Attributes

```{=html}

<iframe height="400" width="100%" frameborder="no" src="https://edwxgo-yin0shuen-chin.shinyapps.io/App3/"> </iframe>
```
<p style="color:#6200EA;">Findings:</p>

```{r, echo = FALSE, message = FALSE}
# Load the necessary library
library(knitr)
library(kableExtra)


# Create a data frame
findings <- data.frame(
  song_attribute = c("Speechiness", "Tempo", "Loudness", "Acousticness", "Valence"),
  overall_shape = c("Right-skewed", "Normal", "Left-skewed", "Right-skewed", "Normal"),
  observation = c("Most songs have low speechiness of below 0.1.", "Most songs have moderate tempo between 100 to 150BPM.", "Most songs have moderate loudness of around -5dB.","Most songs have low acousticness of 0.","Valence is rather evenly split, with a higher proportion falling between 0.5 to 0.75.")
)

# Create a table using kable
kable(findings) %>%
  kable_styling()
```


## 3.2 Individual Analysis of Impact of Song Attributes on Popularity

Scatter plots, regression lines and correlation coeffients were portrayed to analyse the relationship between each individual song attribute and popularity. 

## 3.2.1 Effect of Speechiness on Popularity 

```{r, echo = FALSE, message =FALSE, warning = FALSE}
library(ggplot2)


# Convert the tempo column to numeric
df$speechiness <- as.numeric(df$speechiness)

# Create the scatter plot using ggplot
plot <- ggplot(df, aes(x = speechiness, y = popularity, color = speechiness)) +
  geom_point() +
  geom_smooth(method = lm, se = FALSE) +
  scale_color_gradient2(low = "darkblue", mid = "mediumpurple", high = "red",
                         midpoint = median(df$speechiness), space = "Lab") +
  theme_minimal() +
  theme(legend.position = "right") +
  labs(title = "Speechiness Versus Popularity",
       x = "Speechiness",
       y = "Popularity")

plot
```
I further calculated the correlation coefficient to confirm the association between speechiness and popularity.

```{r, message = FALSE }
library(tidyverse)
df <- read_csv("df.csv")

correlation <- cor(df$speechiness, df$popularity)
print(paste("Correlation coefficient between speechiness and popularity:", round(correlation, 3)))

```
## 3.2.2 Effect of Tempo on Popularity 

```{r, echo = FALSE, message =FALSE, warning = FALSE}
library(ggplot2)


# Convert the tempo column to numeric
df$tempo <- as.numeric(df$tempo)

# Create the scatter plot using ggplot
plot <- ggplot(df, aes(x = tempo, y = popularity, color = tempo)) +
  geom_point() +
  geom_smooth(method = lm, se = FALSE) +
  scale_color_gradient2(low = "darkblue", mid = "mediumpurple", high = "red",
                         midpoint = median(df$tempo), space = "Lab") +
  theme_minimal() +
  theme(legend.position = "right") +
  labs(title = "Tempo Versus Popularity",
       x = "Tempo",
       y = "Popularity")
plot
```
I further calculated the correlation coefficient to confirm the association between tempo and popularity.

```{r, message = FALSE }
library(tidyverse)
df <- read_csv("df.csv")

correlation <- cor(df$tempo, df$popularity)
print(paste("Correlation coefficient between tempo and popularity:", round(correlation, 3)))

```


## 3.2.3 Effect of Loudness on Popularity 

```{r, echo = FALSE, message =FALSE, warning = FALSE}
library(ggplot2)


# Convert the tempo column to numeric
df$loudness <- as.numeric(df$loudness)

# Create the scatter plot using ggplot
plot <- ggplot(df, aes(x = loudness, y = popularity, color = loudness)) +
  geom_point() +
  geom_smooth(method = lm, se = FALSE) +
  scale_color_gradient2(low = "darkblue", mid = "mediumpurple", high = "red",
                         midpoint = median(df$loudness), space = "Lab") +
  theme_minimal() +
  theme(legend.position = "right") +
  labs(title = "Loudness Versus Popularity",
       x = "Loudness",
       y = "Popularity")

plot
```

I further calculated the correlation coefficient to confirm the association between loudness and popularity.

```{r, message = FALSE }
library(tidyverse)
df <- read_csv("df.csv")

correlation <- cor(df$loudness, df$popularity)
print(paste("Correlation coefficient between loudness and popularity:", round(correlation, 3)))

```


## 3.2.4 Effect of Acousticness on Popularity 

```{r, echo = FALSE, message =FALSE, warning = FALSE}
library(ggplot2)


# Convert the tempo column to numeric
df$acousticness <- as.numeric(df$acousticness)

# Create the scatter plot using ggplot
plot <- ggplot(df, aes(x = acousticness, y = popularity, color = acousticness)) +
  geom_point() +
  geom_smooth(method = lm, se = FALSE) +
  scale_color_gradient2(low = "#000033", mid = "mediumpurple", high = "red",
                         midpoint = median(df$acousticness), space = "Lab") +
  theme_minimal() +
  theme(legend.position = "right") +
  labs(title = "Acousticness Versus Popularity",
       x = "Acousticness",
       y = "Popularity")

plot
```
I further calculated the correlation coefficient to confirm the association between acousticness and popularity.

```{r, message = FALSE }
library(tidyverse)
df <- read_csv("df.csv")

correlation <- cor(df$acousticness, df$popularity)
print(paste("Correlation coefficient between acousticness and popularity:", round(correlation, 3)))

```

## 3.2.5 Effect of Valence on Popularity 

```{r, echo = FALSE, message =FALSE, warning = FALSE}
library(ggplot2)


# Convert the tempo column to numeric
df$loudness <- as.numeric(df$valence)

# Create the scatter plot using ggplot
plot <- ggplot(df, aes(x = valence, y = popularity, color = valence)) +
  geom_point() +
  geom_smooth(method = lm, se = FALSE) +
  scale_color_gradient2(low = "darkblue", mid = "mediumpurple", high = "red",
                         midpoint = median(df$valence), space = "Lab") +
  theme_minimal() +
  theme(legend.position = "right") +
  labs(title = "Valence Versus Popularity",
       x = "Valence",
       y = "Popularity")

plot
```
I further calculated the correlation coefficient to confirm the association between valence and popularity.

```{r, message = FALSE }
library(tidyverse)
df <- read_csv("df.csv")

correlation <- cor(df$valence, df$popularity)
print(paste("Correlation coefficient between valence and popularity:", round(correlation, 3)))

```

## 3.2.6 Overall findings 

<p style="color:#6200EA;">Table consolidating correlation coefficients of all 5 song attributes:</p> 
```{r, echo = FALSE}
# Create a data frame
findings <- data.frame(
  song_attribute = c("Speechiness", "Tempo", "Loudness", "Acousticness", "Valence"),
  correlation_coefficient = c("0.023", "0.011", "0.030", "0.022", "-0.012")
)

# Create a table using kable
kable(findings) %>%
  kable_styling()

```
<p style="color:#6200EA;">Overall, the five song attributes: speechiness, tempo, loudness, acousticness and valence do not have significant effects on song popularity. All have weak associations with popularity. Notably, speechiness, tempo, loudness and acousticness are positively associated with popularity, while only valence is negatively associated.</p>

<p style="color:#6200EA;">Diving deeper into each individual correlation coefficient, it is also seen that loudness is most strongly associated with popularity, followed by speechiness then acousticness. </p> 



